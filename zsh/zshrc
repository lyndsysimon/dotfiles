# --- History {{{
HISTFILE=~/.config/zsh/.histfile
HISTSIZE=1000
SAVEHIST=1000
# }}}

# --- Options {{{
unsetopt beep
# }}}

# --- Binds {{{

# up and down arrows complete a partial command from history
bindkey '\e[A' history-beginning-search-backward
bindkey '\e[B' history-beginning-search-forward

# Vim mode
bindkey -v

# TODO: Decide if this section is still needed
# Make the delete key work (WTF doesn't it by default!?)
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char
bindkey ';5D' backward-word
bindkey ';5C' forward-word
# }}}

# --- Completions {{{
zstyle :compinstall filename "$HOME/.zshrc"

# Add completions directory to fpath, so zsh sees it
fpath=(~/.config/zsh/completions $fpath)

autoload -Uz compinit
compinit
# }}}

# --- $PATH {{{

# user scripts
PATH_PREPENDS=~/.bin

# homebrew
PATH_PREPENDS=$PATH_PREPENDS:/usr/local/bin:/usr/local/sbin

# gems
# TODO: Generalize this directory to support Linux
RUBY_BIN_DIR=/usr/local/opt/ruby/bin
[[ -d $RUBY_BIN_DIR ]] && PATH_PREPENDS=$RUBY_BIN_DIR:$PATH_PREPENDS

# rvm
RVM_DIR=$HOME/.rvm/bin
[[ -d $RVM_DIR ]] && PATH_PREPENDS=$PATH_PREPENDS:$RVM_DIR

export PATH=$PATH_PREPENDS:$PATH
# }}}

# --- Plugins {{{
source ~/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# }}}

# --- Prompt {{{
setopt promptsubst

autoload -U colors && colors
function shortpath() { dirs | awk -F'/' '{for(i=1;i<=NF;i++) printf (i==NF ? $i : substr($i,1,1)"/")}' }

function zle-line-init zle-keymap-select precmd {
    RPS1=''
    # git branch
    git branch &> /dev/null && RPS1=$RPS1$'%F{cyan}⌥ :`git rev-parse --abbrev-ref HEAD`%f '
    # python virtualenv
    [[ ! -z "${VIRTUAL_ENV+_}" ]] && RPS1=$RPS1$'%F{yellow}🐍 :`basename "$VIRTUAL_ENV"`%f '
    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]% %{$reset_color%}"
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $RPS1"

    if [ -z "${KEYMAP+_}" ]
    then
        # this block is executed only when a new prompt is drawn, not upon redraw
        happy_faces=('( ͡° ͜ʖ ͡°)' 'ʕ•ᴥ•ʔ' '(ᵔᴥᵔ)' '(◕‿◕✿)' '\ (•◡•) /' '(~˘▾˘)~');
        sad_faces=('ಠ_ಠ' 'ಠ ╮ ಠ' '◉ _◉' '⚆ _ ⚆');
        # colored block for last command exit status
        PS1=$'%(?.%F{green}.%F{red})█%f'
        # time
        PS1=$PS1$' %D{%H:%M:%S}'

        # happy/sad face
        PS1=$PS1$' %(?.%F{green}$happy_faces[RANDOM % $#happy_faces + 1].%F{red}$sad_faces[RANDOM % $#sad_faces + 1])%f'

        # Location line
        # path
        PS1=$PS1$'\n█ [`shortpath`]-> '
        export FROZEN_PS1=$(print -P $PS1);
    else
        PS1=$FROZEN_PS1
        zle && zle reset-prompt
    fi
}

zle -N zle-line-init
zle -N zle-keymap-select
# }}}

# --- Program-specific Settings {{{
# --- Python {{{
source /usr/local/bin/virtualenvwrapper.sh
export PIP_REQUIRE_VIRTUALENV=true

export PIP_CERT=~/.config/ssl/certs/DigiCertHighAssuranceEVRootCA.pem
# }}}
export PGDATA=/usr/local/var/postgres
export GREP_OPTIONS='--color=auto'

# --- Java  {{{
JAVA_DIR="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
if [ -d $JAVA_DIR ]
then
    export JAVA_HOME=$JAVA_DIR
fi
# }}}
# }}}

# --- Aliases {{{
which lolcat &> /dev/null && alias cat='lolcat'

alias fucking='sudo'

# - Development

alias g='git '
alias i='invoke'

which nvim 1>/dev/null
[[ $? -eq 0 ]] && alias v='nvim' vim='nvim' || alias v='vim'
alias m='python manage.py'

# - gitdoge

alias so='git'
alias very='git'
alias such='git'
alias wow='git push'

# - gityolo

alias yolo='git push -f'

# - Python virtual environments

alias d='deactivate'
alias mkv='mkvirtualenv'
alias rmv='rmvirtualenv'
alias wo='workon'

# }}}

# vim:foldmethod=marker:foldlevel=0
